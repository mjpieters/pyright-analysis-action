name: Action checks
on:
  push:
    branches: [ "main" ]
    tags: [ "image/v*.*.*" ]
  pull_request:
  merge_group:

env:
  FORCE_COLOR: 1
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read

jobs:
  python-lint:
    runs-on: ubuntu-latest
    name: "Python linting"
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      
    - name: Install uv
      uses: astral-sh/setup-uv@4db96194c378173c656ce18a155ffc14a9fc4355 # v5.2.2
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Set up Python 🐍
      uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
      with:
        python-version-file: "pyproject.toml"
    
    - name: Check lock is up-to-date
      run: |
        uv lock --check

    - name: Install dependencies
      run: |
        uv sync
        echo "$PWD/.venv/bin" >> $GITHUB_PATH

    - name: Check file formatting
      uses: astral-sh/ruff-action@47de3deae877b8fcf76756bc14e8f8edd5e03e7d # v3.0.2
      with:
        args: "format --check"

    - name: Lint with ruff
      env:
        RUFF_OUTPUT_FORMAT: github
      run: |
        ruff check

    - name: Typecheck with pyright
      uses: jakebailey/pyright-action@b5d50e5cde6547546a5c4ac92e416a8c2c1a1dfe # v2.3.2
      with:
        version: PATH

  docker-lint:
    runs-on: ubuntu-latest
    name: "Docker linting"
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
  
    - uses: hadolint/hadolint-action@54c9adbab1582c2ef04b2016b760714a4bfde3cf # v3.1.0
      name: Lint Dockerfile
  
  tests:
    runs-on: ubuntu-latest
    name: Python tests

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Install uv
      uses: astral-sh/setup-uv@4db96194c378173c656ce18a155ffc14a9fc4355  # v5.2.2
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"
  
    - name: Set up Python 🐍
      uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
      with:
        python-version: 3.13
  
    - name: Install dependencies
      run: |
        uv sync

    - name: Test with pytest
      run: |
        uv run pytest -v --junitxml=junit.xml -o junit_family=legacy

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@13ce06bfc6bbe3ecf90edbbf1bc32fe5978ca1d3 # v5.3.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Upload test results to Codecov
      if: ${{ !cancelled() }}
      uses: codecov/test-results-action@4e79e65778be1cecd5df25e14af1eafb6df80ea9  # v1.0.2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  build:
    runs-on: ubuntu-latest
    name: "Build"
    needs:
    - python-lint
    - tests
    - docker-lint
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
  
    - name: Build test image
      uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991 # v6.13.0
      with:
        load: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:test
        build-args: |
          VERSION="0.1.0dev0+test"
    
    - name: Image smoketest
      env:
        TEST_TAG: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:test
      run: |
        docker run --rm "${TEST_TAG}" --smoketest
    
    - name: Extract docker image tag
      id: image_tag
      run: |
        if [[ "$GITHUB_REF" == refs/tags/image/* ]]; then
          echo "image_version=${GITHUB_REF_NAME#image/}" >> "$GITHUB_OUTPUT"
        else
          echo "image_version=" >> "$GITHUB_OUTPUT"
        fi

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5.6.1
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
            type=semver,pattern=v{{version}},value=${{ steps.image_tag.outputs.image_version }}
            type=ref,event=branch
            type=ref,event=pr

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991 # v6.13.0
      name: Build and push image
      id: build-image
      with:
        context: .
        push: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        annotations: ${{ steps.meta.outputs.annotations }}
        build-args: |
          VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}

    - name: Generate artifact attestation
      if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
      uses: actions/attest-build-provenance@520d128f165991a6c774bcb264f323e3d70747f4 # v2.2.0
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
        subject-digest: ${{ steps.build-image.outputs.digest }}
